name: maxit
services:
  rabbitmq:
    image: rabbitmq:3.13-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:15672"]
      interval: 30s
      timeout: 10s
      retries: 5
  file-storage:
    image: seber/maxit-file-storage:latest
    ports:
      - "8888:8888"
    environment:
      - APP_PORT=8888
  backend:
    image: seber/maxit-backend:latest
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
      - file-storage
      - db
    environment:
      - QUEUE_HOST=rabbitmq
      - QUEUE_PORT=5672
      - QUEUE_USER=guest
      - QUEUE_PASSWORD=guest
      - APP_PORT=8000
      - DB_HOST=db
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=maxit
      - FILE_STORAGE_HOST=file-storage
      - FILE_STORAGE_PORT=8888
      - JWT_SECRET_KEY=your_jwt_secret_key
      - DUMP=true
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
  db:
    image: postgres:17
    ports:
      - "5431:5432"
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_DB: maxit
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
  worker:
    image: seber/maxit-worker:latest
    depends_on:
      - rabbitmq
      - db
      - backend
      - file-storage
    environment:
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_PORT=5672
      - FILESTORAGE_HOST=file-storage
      - FILESTORAGE_PORT=8888
      - DOCKER_HOST=unix:///var/run/docker.sock
      - JOBS_DATA_VOLUME=maxit_worker_jobs-data
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - worker_jobs-data:/tmp
  frontend:
    image: seber/maxit-frontend:latest
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - DATABASE_URL=postgres://postgres:password@db:5432/maxit
      - FILESTORAGE_URL=http://file-storage:8888
      - BACKEND_URL=http://backend:8000
      - ORIGIN=http://localhost:3000

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5

volumes:
  worker_jobs-data: